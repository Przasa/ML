#plotting
plt.imshow(mnist.data[index].reshape(28,28),cmap=mpl.cm.binary)

#classification
sgd_clf = SGDClassifier(max_iter=1000, tol=1e-3, random_state=42) #from sklearn.linear_model import SGDClassifier, sgd_clf.fit(X_train, y_train_5), sgd_clf.predict([some_digit])
skfolds = StratifiedKFold(n_splits=3, random_state=42) # from sklearn.model_selection import StratifiedKFold; fit... transform...
class Never5Classifier(BaseEstimator): #from sklearn.base import BaseEstimator
    def fit(self, X, y=None):
        pass
    def predict(self, X):
        return np.zeros((len(X), 1), dtype=bool)


#working with results.
cross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring="accuracy") #from sklearn.model_selection import cross_val_score
y_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3) #from sklearn.model_selection import cross_val_predict
confusion_matrix(y_train_5, y_train_pred) # from sklearn.metrics import confusion_matrix
precision_score(y_train_5, y_train_pred) # from sklearn.metrics import precision_score, recall_score
f1_score(y_train_5, y_train_pred) # from sklearn.metrics import f1_score



#misc.
clone_clf = clone(sgd_clf) # from sklearn.base import clone


